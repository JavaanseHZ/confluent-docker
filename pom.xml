<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.ben.vogler</groupId>
    <artifactId>confluent-docker</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <java.version>1.8</java.version>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.24.0</version>
                <configuration>
                    <verbose>true</verbose>
                    <dockerHost>unix:///var/run/docker.sock</dockerHost>
                    <images>
                        <image>
                            <!-- Replace your-project-name -->
                            <name>${project.artifactId}:${project.version}</name>
                            <build>
                                <!-- This is the same FROM used in a Dockerfile -->
                                <from>openjdk:8-jdk-alpine</from>
                                <runCmds>
                                    <run>apk --no-cache add openssl wget tar bash curl</run>
                                    <run>wget -q http://packages.confluent.io/archive/4.0/confluent-oss-4.0.0-2.11.tar.gz</run>
                                    <run>tar -xzf confluent-oss-4.0.0-2.11.tar.gz</run>
                                    <run>rm confluent-oss-4.0.0-2.11.tar.gz</run>
                                </runCmds>
                                <cmd>
                                    <![CDATA[/confluent-4.0.0/bin/confluent start && tail -F /confluent-4.0.0/log/server.log]]>
                                </cmd>

                                <assembly>
                                    <!-- This is a predefined assembly.xml that will only copy your final artifact to the Docker image -->
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                            </build>
                            <run>
                                <ports>
                                    <port>2181:2181</port>
                                    <port>8081:8081</port>
                                    <port>9092:9092</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>